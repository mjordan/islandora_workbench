name: Build
on:
  release:
    types: [published]
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-11
            TARGET: macos
            CMD_BUILD: pyinstaller workbench --onefile --name workbench-macos
            OUT_FILE_NAME: workbench-macos
            ASSET_MIME: application/zip
          - os: ubuntu-22.04
            TARGET: linux
            CMD_BUILD: pyinstaller workbench --onefile --name workbench-linux
            OUT_FILE_NAME: workbench-linux
            ASSET_MIME: application/zip
          - os: ubuntu-24.04
            TARGET: linux
            CMD_BUILD: pyinstaller workbench --onefile --name workbench-linux
            OUT_FILE_NAME: workbench-linux
            ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller workbench --onefile --name workbench 
            OUT_FILE_NAME: workbench.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
    steps:
    - uses: actions/checkout@v5
    - name: Set up Python 3.8
      uses: actions/setup-python@v6
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install "pyinstaller" "requests>=2.22,<3" "requests_cache" "ruamel.yaml<=0.17.21" "progress_bar" "openpyxl" "unidecode" "edtf_validate" "typing-extensions" "rich"        
    - name: Build for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}    
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
        asset_name: ${{ matrix.OUT_FILE_NAME}}
        asset_content_type: ${{ matrix.ASSET_MIME}}
